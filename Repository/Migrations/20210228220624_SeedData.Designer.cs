// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210228220624_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API_Sorv.Model.Produto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TempoValidade")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = "A0001",
                            DataInclusao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Produto 001",
                            TempoValidade = new TimeSpan(0, 4, 0, 0, 0)
                        },
                        new
                        {
                            Id = "A0002",
                            DataInclusao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Produto 002",
                            TempoValidade = new TimeSpan(0, 3, 0, 0, 0)
                        },
                        new
                        {
                            Id = "A0003",
                            DataInclusao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Produto 003",
                            TempoValidade = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            Id = "A0004",
                            DataInclusao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Produto 004",
                            TempoValidade = new TimeSpan(0, 5, 0, 0, 0)
                        },
                        new
                        {
                            Id = "A0005",
                            DataInclusao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Produto 005",
                            TempoValidade = new TimeSpan(0, 4, 0, 0, 0)
                        },
                        new
                        {
                            Id = "A0006",
                            DataInclusao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Produto 006",
                            TempoValidade = new TimeSpan(0, 3, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("Domain.Filial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeFilial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filiais");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d94c576-8ee6-46cb-9c1d-6de54b14ee27"),
                            NomeFilial = "Filial 001"
                        });
                });

            modelBuilder.Entity("Domain.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Domain.Movimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataMovimento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProdutoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TipoMovimento")
                        .HasColumnType("int");

                    b.Property<int>("ValorMovimento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Movimento");
                });

            modelBuilder.Entity("Domain.Saldos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProdutoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Saldo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Saldos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilialId = new Guid("9d94c576-8ee6-46cb-9c1d-6de54b14ee27"),
                            ProdutoId = "A0001",
                            Saldo = 76
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilialId = new Guid("9d94c576-8ee6-46cb-9c1d-6de54b14ee27"),
                            ProdutoId = "A0002",
                            Saldo = 8
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilialId = new Guid("9d94c576-8ee6-46cb-9c1d-6de54b14ee27"),
                            ProdutoId = "A0003",
                            Saldo = 16
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilialId = new Guid("9d94c576-8ee6-46cb-9c1d-6de54b14ee27"),
                            ProdutoId = "A0004",
                            Saldo = 31
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilialId = new Guid("9d94c576-8ee6-46cb-9c1d-6de54b14ee27"),
                            ProdutoId = "A0005",
                            Saldo = 268
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilialId = new Guid("9d94c576-8ee6-46cb-9c1d-6de54b14ee27"),
                            ProdutoId = "A0006",
                            Saldo = 302
                        });
                });

            modelBuilder.Entity("Domain.Funcionario", b =>
                {
                    b.HasOne("Domain.Filial", "Filial")
                        .WithMany("Funcionarios")
                        .HasForeignKey("FilialId");

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("Domain.Movimento", b =>
                {
                    b.HasOne("Domain.Filial", "Filial")
                        .WithMany("Movimentos")
                        .HasForeignKey("FilialId");

                    b.HasOne("Domain.Funcionario", "Funcionario")
                        .WithMany("Movimentos")
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("API_Sorv.Model.Produto", "Produto")
                        .WithMany("Movimentos")
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Filial");

                    b.Navigation("Funcionario");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Saldos", b =>
                {
                    b.HasOne("Domain.Filial", "Filial")
                        .WithMany("Saldos")
                        .HasForeignKey("FilialId");

                    b.HasOne("API_Sorv.Model.Produto", "Produto")
                        .WithMany("Saldos")
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Filial");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("API_Sorv.Model.Produto", b =>
                {
                    b.Navigation("Movimentos");

                    b.Navigation("Saldos");
                });

            modelBuilder.Entity("Domain.Filial", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("Movimentos");

                    b.Navigation("Saldos");
                });

            modelBuilder.Entity("Domain.Funcionario", b =>
                {
                    b.Navigation("Movimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
