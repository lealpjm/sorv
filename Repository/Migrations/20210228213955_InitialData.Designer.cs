// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210228213955_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API_Sorv.Model.Produto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TempoValidade")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Domain.Filial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeFilial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filiais");
                });

            modelBuilder.Entity("Domain.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Domain.Movimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataMovimento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProdutoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TipoMovimento")
                        .HasColumnType("int");

                    b.Property<int>("ValorMovimento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Movimento");
                });

            modelBuilder.Entity("Domain.Saldos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProdutoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Saldo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Saldos");
                });

            modelBuilder.Entity("Domain.Funcionario", b =>
                {
                    b.HasOne("Domain.Filial", "Filial")
                        .WithMany("Funcionarios")
                        .HasForeignKey("FilialId");

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("Domain.Movimento", b =>
                {
                    b.HasOne("Domain.Filial", "Filial")
                        .WithMany("Movimentos")
                        .HasForeignKey("FilialId");

                    b.HasOne("Domain.Funcionario", "Funcionario")
                        .WithMany("Movimentos")
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("API_Sorv.Model.Produto", "Produto")
                        .WithMany("Movimentos")
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Filial");

                    b.Navigation("Funcionario");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Saldos", b =>
                {
                    b.HasOne("Domain.Filial", "Filial")
                        .WithMany("Saldos")
                        .HasForeignKey("FilialId");

                    b.HasOne("API_Sorv.Model.Produto", "Produto")
                        .WithMany("Saldos")
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Filial");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("API_Sorv.Model.Produto", b =>
                {
                    b.Navigation("Movimentos");

                    b.Navigation("Saldos");
                });

            modelBuilder.Entity("Domain.Filial", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("Movimentos");

                    b.Navigation("Saldos");
                });

            modelBuilder.Entity("Domain.Funcionario", b =>
                {
                    b.Navigation("Movimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
